@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

/* @media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb)); */
/* } */

@font-face {
  font-family: "CustomFont";
  src: url("/fonts/MunhwaMyungjoStd-Regular.otf") format("opentype");
}

@keyframes slide-up {
  0% {
    transform: translateY(10%);
  }

  100% {
    transform: translateY(-50%);
  }
}

@layer utilities {
  .animate-slide-up {
    animation: slide-up 30s infinite linear;
  }
}

html,
body {
  padding: 0;
  margin: 0;
  font-family: -apple-system, CustomFont, BlinkMacSystemFont, Segoe UI, Roboto,
    Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
  background-color: #fefedf;
}

body {
  min-height: 100vh;
}

* {
  box-sizing: border-box;
  white-space: pre-line; /* React에서 줄바꿈 인식하게 하는 코드, 연속 공백 유지하려면 pre-wrap 사용해도 된다. */
}

h1 {
  text-align: center;
}

ul {
  list-style-type: none;
  padding: 0;
}

li {
  display: flex;
  align-items: center;
}

button {
  background-color: white;
  transition: background-color 0.3s, color 0.3s;
  margin: 10px 0px;
  padding: 10px 0px;
}

button:hover {
  background-color: gray;
  color: white;
}
.banner {
  box-shadow: -5px 2px 5px rgba(0, 0, 0, 0.2);
}
.smallbutton {
  background-color: rgba(0, 0, 0, 0);
  font-size: small;
  padding: 10px 0px;
  transition: font-size 0.3s, font-size 0.3s;
}

.smallbutton:hover {
  background-color: rgba(0, 0, 0, 0);
  color: gray;
  font-size: medium;
}

.container {
  max-height: 86vh;
  max-width: 87vw;
  margin: 15px 0px 10px 0px;
  padding: 15px;
  background-color: white;
  border-radius: 10px;
  box-shadow: 0 2px 15px rgba(0, 0, 0, 0.3);
  overflow: scroll;
}

.small-answer {
  transition: transform 1s ease; /* transform 속성에 대한 애니메이션 효과 적용 */
}
